
package SoapWebService.proxy;

import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.ResponseWrapper;

import java.util.List;

import javax.xml.bind.annotation.XmlSeeAlso;



/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "WeatherService", targetNamespace = "http://SoapWebService/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface WeatherService {


    /**
     * 
     * @param city
     * @return
     *     returns proxy.Weather
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getWeather", targetNamespace = "http://SoapWebService/", className = "proxy.GetWeather")
    @ResponseWrapper(localName = "getWeatherResponse", targetNamespace = "http://SoapWebService/", className = "proxy.GetWeatherResponse")
    @Action(input = "http://SoapWebService/WeatherService/getWeatherRequest", output = "http://SoapWebService/WeatherService/getWeatherResponse")
    public Weather getWeather(
        @WebParam(name = "city", targetNamespace = "")
        String city);

    /**
     * 
     * @param city
     * @return
     *     returns java.util.List<proxy.Weather>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getForecast", targetNamespace = "http://SoapWebService/", className = "proxy.GetForecast")
    @ResponseWrapper(localName = "getForecastResponse", targetNamespace = "http://SoapWebService/", className = "proxy.GetForecastResponse")
    @Action(input = "http://SoapWebService/WeatherService/getForecastRequest", output = "http://SoapWebService/WeatherService/getForecastResponse")
    public List<Weather> getForecast(
        @WebParam(name = "city", targetNamespace = "")
        String city);

}
